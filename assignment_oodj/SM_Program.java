package assignment_oodj;

//import SM_Classes.*;

//import com.formdev.flatlaf.FlatIntelliJLaf;
//import com.formdev.flatlaf.FlatLaf;
import java.awt.*;
import java.text.DecimalFormat;
import java.util.ArrayList;
//import java.util.Collections;
import javax.swing.JOptionPane;
//import javax.swing.UIManager;

import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JComboBox;
import javax.swing.ListSelectionModel;

import org.jfree.chart.ChartFactory;  
import org.jfree.chart.ChartPanel;  
import org.jfree.chart.JFreeChart;  
import org.jfree.data.general.DefaultPieDataset;  
import org.jfree.data.general.PieDataset;  

import org.jfree.data.*;
import org.jfree.util.*;
//import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
//import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Owi Sze Jay
 */


public class SM_Program extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    private boolean Admin = false;
    private static final SimpleDateFormat tmstmp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    private static final SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
    DecimalFormat df = new DecimalFormat("0.00");
    DecimalFormat rm = new DecimalFormat("RM    0.00");
    DecimalFormat rm2 = new DecimalFormat("RM0.00");
  
//    Item itm = new Item();
//    PurchaseRequisite pr = new PurchaseRequisite();
//    PurchaseOrder po = new PurchaseOrder();
//    Sales sales = new Sales();  
    Sales_Manager sm = new Sales_Manager();
//    Supplier sup = new Supplier();
//    ItemUnitPrice iup = new ItemUnitPrice();

//    Sales_Manager sm = new Sales_Manager();
    
    
    
//    //Read Item.txt
//    public ArrayList<Item> ItemList = itmfop.ReadFile("src/Data/Item.txt", itm);
//    //Read PurchaseRequisite.txt
//    public ArrayList<PurchaseRequisite> PRList = prfop.ReadFile("src/Data/PurchaseRequisite.txt", pr);
//    //Read PurchaseOrder.txt
//    public ArrayList<PurchaseOrder> POList = pofop.ReadFile("src/Data/PurchaseOrder.txt",po);
//    //Read Sales.txt
//    public ArrayList<Sales> SalesList = salesfop.ReadFile("src/Data/Sales.txt", sales);
//    //Read Supplier.txt
//    public ArrayList<Supplier> SupList = supfop.ReadFile("src/Data/Supplier.txt", sup);
//    //Read ItemUnitPrice.txt
//    public ArrayList<ItemUnitPrice> IUPList = iupfop.ReadFile("src/Data/ItemUnitPrice.txt", iup);
    

    ArrayList<Item> ItemList = sm.ItemList;
    ArrayList<PurchaseRequisite> PRList = sm.PRList;
    ArrayList<PurchaseOrder> POList = sm.POList;
    ArrayList<Sales> SalesList = sm.SalesList;
    ArrayList<Supplier> SupList = sm.SupList;
    ArrayList<ItemUnitPrice> IUPList = sm.IUPList;
    
    
    int SelectedRow = -1;
    
    DefaultTableModel InventoryTable;
    DefaultTableModel IUPTable;
    DefaultTableModel ItemTable;
    DefaultTableModel IUPTableItem;
            
    public SM_Program(Sales_Manager sm){
        initComponents();     

            
        InventoryTable = (DefaultTableModel)tblinventory.getModel();
        IUPTable = (DefaultTableModel)tbliup.getModel();
        ItemTable = (DefaultTableModel)tblVitm.getModel();
        IUPTableItem = (DefaultTableModel)tblitmiup.getModel();
        
        this.sm = sm;
        if(this.sm.getUserType().equals("A")){
            Admin = true;
        }
        SetNameID();
        sm.readLoginCredentials();
        
        //Initialize Pages
        InitAddSalesPage();
        InitPRPage();
        InitSalesReportPage();
        InitPOPage();

        sm.DisplayProfile(ProfileUserType, ProfileID, ProfileFN, ProfileLN, ProfileGender, ProfileEmail, ProfileContact);
        ChgPassError.setText("");

        LoadInventory();
        LoadItemView();
        LoadItmIDCMB(cmbitmid);
        LoadItmIDCMB(cmbVitmid);
        sm.setPOwList(POList,PRList);
        
        this.setVisible(true);

//        fop.WriteFile("src/Data/Item.txt",ItemList);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ItemComboBox = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        pnlTopPanel = new javax.swing.JPanel();
        lblNexusLogo = new javax.swing.JLabel();
        lblSM_ID = new javax.swing.JLabel();
        PnlSMDashboard = new javax.swing.JPanel();
        lblSM_Name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlViewItems = new javax.swing.JPanel();
        pnlVitm = new javax.swing.JPanel();
        tblscrollpanelitem = new javax.swing.JScrollPane();
        tblVitm = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jLabel77 = new javax.swing.JLabel();
        cmbVitmid = new javax.swing.JComboBox<>();
        btnVclear = new javax.swing.JButton();
        jLabel78 = new javax.swing.JLabel();
        txtfieldVitmid = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        txtfieldVitmname = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        txtfieldVdesc = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        txtfieldVRP = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblitmiup = new javax.swing.JTable();
        lblitmstatus1NoUse = new javax.swing.JLabel();
        pnlSalesEntry = new javax.swing.JPanel();
        txtItemID = new javax.swing.JTextField();
        spiQuantity = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtReceiptNo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        SalesTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtSM_ID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNoQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNoItems = new javax.swing.JTextField();
        pnlPrices = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblGrandTotal = new javax.swing.JLabel();
        lblGST = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtSM_Name = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnAddItem = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnAddSale = new javax.swing.JButton();
        cmbItemID = new javax.swing.JComboBox<>();
        btnRemoveAll = new javax.swing.JButton();
        btnConfirmEdit = new javax.swing.JButton();
        btnCancelEdit = new javax.swing.JButton();
        pnlSalesReport = new javax.swing.JPanel();
        cmbMonth = new javax.swing.JComboBox<>();
        cmbYear = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        lblNumberOfSales = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        lblRevenue = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        lblItemSold = new javax.swing.JLabel();
        btnDisplay = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        pnlPieChart = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        pnlBarChart = new javax.swing.JPanel();
        pnlStockLevel = new javax.swing.JPanel();
        pnlVI = new javax.swing.JPanel();
        tblscrollpanel = new javax.swing.JScrollPane();
        tblinventory = new javax.swing.JTable();
        pnladddetails = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbliup = new javax.swing.JTable();
        jLabel50 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        txtfielditmid = new javax.swing.JTextField();
        txtfieldname = new javax.swing.JTextField();
        txtfielddesc = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        txtfieldQiS = new javax.swing.JTextField();
        txtfieldRL = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        lblitmstatus = new javax.swing.JLabel();
        lblstatusstar = new javax.swing.JLabel();
        cmbitmid = new javax.swing.JComboBox<>();
        btnclear = new javax.swing.JButton();
        jLabel76 = new javax.swing.JLabel();
        pnlCreatePR = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtPRID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtReqTimestamp = new javax.swing.JTextField();
        txtReqbyName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtReqbyID = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnSearch1 = new javax.swing.JButton();
        PRScrollPane = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lblRequestDate = new javax.swing.JLabel();
        lblPRID = new javax.swing.JLabel();
        lblRequestName = new javax.swing.JLabel();
        lblRequestStaffID = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PRItemTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel26 = new javax.swing.JLabel();
        lblRequestQuantity = new javax.swing.JLabel();
        lblApprovedStaffID = new javax.swing.JLabel();
        lblApprovedName = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        lblApprovedDate = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        cmbPRItemID = new javax.swing.JComboBox<>();
        spiQuantityPR = new javax.swing.JSpinner();
        lblQuantityNeeded = new javax.swing.JLabel();
        lblCurrentStock = new javax.swing.JLabel();
        lblReorderLevel = new javax.swing.JLabel();
        lblStockStatus = new javax.swing.JLabel();
        txtCurrentStock = new javax.swing.JTextField();
        txtReorderLevel = new javax.swing.JTextField();
        txtStockStatus = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ScrollPaneViewPR = new javax.swing.JScrollPane();
        pnlViewPR = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        lblViewRequestDate = new javax.swing.JLabel();
        lblViewPRID = new javax.swing.JLabel();
        lblViewRequestName = new javax.swing.JLabel();
        lblViewRequestStaffID = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        PRViewItemTable = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel39 = new javax.swing.JLabel();
        lblViewRequestQuantity = new javax.swing.JLabel();
        lblViewApprovedStaffID = new javax.swing.JLabel();
        lblViewApprovedName = new javax.swing.JLabel();
        lblViewApprovedDate = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        cmbPRID = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        pnlViewPO = new javax.swing.JPanel();
        ScrollPaneViewPO = new javax.swing.JScrollPane();
        pnlViewPurchaseOrder = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        lblViewPODate = new javax.swing.JLabel();
        lblViewPOID = new javax.swing.JLabel();
        lblViewPOName = new javax.swing.JLabel();
        lblViewPOStaffID = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        POViewTable = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        lblViewPOApprovedStaffID = new javax.swing.JLabel();
        lblViewPOApprovedName = new javax.swing.JLabel();
        lblViewPOApprovedDate = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        lblViewPOSupplier = new javax.swing.JLabel();
        lblViewPOSuppID = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel68 = new javax.swing.JLabel();
        lblViewDelStatus = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        lblViewDelDate = new javax.swing.JLabel();
        cmbPOID = new javax.swing.JComboBox<>();
        jLabel65 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        ProfileID = new javax.swing.JLabel();
        ProfileUserType = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        ProfileFN = new javax.swing.JLabel();
        ProfileLN = new javax.swing.JLabel();
        ProfileGender = new javax.swing.JLabel();
        ProfileEmail = new javax.swing.JLabel();
        ProfileContact = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        ProfileCurrentPass = new javax.swing.JPasswordField();
        ProfileNewPass = new javax.swing.JPasswordField();
        ProfileChgPass = new javax.swing.JButton();
        ChgPassError = new javax.swing.JLabel();
        ShowHidePass = new javax.swing.JToggleButton();
        btnLogout = new javax.swing.JButton();

        ItemComboBox.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        ItemComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ITM001", "ITM002", "ITM003", "ITM004", "ITM005","ITM006" }));
        ItemComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemComboBoxActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(228, 224, 225));
        setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        setLocationByPlatform(true);
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(228, 224, 225));
        jPanel3.setPreferredSize(new java.awt.Dimension(1280, 720));

        pnlTopPanel.setBackground(new java.awt.Color(171, 136, 109));
        pnlTopPanel.setPreferredSize(new java.awt.Dimension(1280, 120));

        lblNexusLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/NexusLogoThemeSmall.png"))); // NOI18N

        lblSM_ID.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        lblSM_ID.setForeground(new java.awt.Color(228, 224, 225));
        lblSM_ID.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSM_ID.setText("Sales Manager ID");

        javax.swing.GroupLayout pnlTopPanelLayout = new javax.swing.GroupLayout(pnlTopPanel);
        pnlTopPanel.setLayout(pnlTopPanelLayout);
        pnlTopPanelLayout.setHorizontalGroup(
            pnlTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblNexusLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 455, Short.MAX_VALUE)
                .addComponent(lblSM_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnlTopPanelLayout.setVerticalGroup(
            pnlTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblNexusLogo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
            .addComponent(lblSM_ID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PnlSMDashboard.setBackground(new java.awt.Color(228, 224, 225));

        lblSM_Name.setBackground(new java.awt.Color(228, 224, 225));
        lblSM_Name.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        lblSM_Name.setForeground(new java.awt.Color(73, 54, 40));
        lblSM_Name.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSM_Name.setText("Welcome! SM_Name");

        jLabel2.setBackground(new java.awt.Color(228, 224, 225));
        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(73, 54, 40));
        jLabel2.setText("Sales Manager Dashboard");

        javax.swing.GroupLayout PnlSMDashboardLayout = new javax.swing.GroupLayout(PnlSMDashboard);
        PnlSMDashboard.setLayout(PnlSMDashboardLayout);
        PnlSMDashboardLayout.setHorizontalGroup(
            PnlSMDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlSMDashboardLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSM_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        PnlSMDashboardLayout.setVerticalGroup(
            PnlSMDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlSMDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblSM_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(228, 224, 225));
        jTabbedPane1.setForeground(new java.awt.Color(73, 54, 40));
        jTabbedPane1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1280, 552));
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        pnlViewItems.setBackground(new java.awt.Color(228, 224, 225));

        pnlVitm.setBackground(new java.awt.Color(228, 224, 225));

        tblVitm.setBackground(new java.awt.Color(214,192,179));
        tblVitm.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        tblVitm.setForeground(new java.awt.Color(73, 54, 40));
        tblVitm.getTableHeader().setOpaque(false);
        tblVitm.getTableHeader().setBackground(Color.decode("#AB886D"));
        tblVitm.getTableHeader().setForeground(Color.decode("#E4E0E1"));
        tblVitm.getTableHeader().setFont(new Font("Yu Gothic UI", Font.BOLD, 14));
        tblVitm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Description", "Retail Price (RM)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVitm.setGridColor(new java.awt.Color(214, 192, 179));
        tblVitm.getTableHeader().setReorderingAllowed(false);
        tblscrollpanelitem.setViewportView(tblVitm);
        if (tblVitm.getColumnModel().getColumnCount() > 0) {
            tblVitm.getColumnModel().getColumn(0).setMinWidth(80);
            tblVitm.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblVitm.getColumnModel().getColumn(0).setMaxWidth(80);
            tblVitm.getColumnModel().getColumn(1).setMinWidth(170);
            tblVitm.getColumnModel().getColumn(1).setPreferredWidth(170);
            tblVitm.getColumnModel().getColumn(1).setMaxWidth(170);
            tblVitm.getColumnModel().getColumn(3).setMinWidth(150);
            tblVitm.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblVitm.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        jPanel14.setBackground(new java.awt.Color(228, 224, 225));
        jPanel14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(171, 136, 109), 4, true));

        jLabel77.setFont(new java.awt.Font("Yu Gothic UI", 1, 16)); // NOI18N
        jLabel77.setText("Item ID :");

        cmbVitmid.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        cmbVitmid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select..." }));
        cmbVitmid.setFocusable(false);
        cmbVitmid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVitmidActionPerformed(evt);
            }
        });

        btnVclear.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnVclear.setText("Clear");
        btnVclear.setFocusPainted(false);
        btnVclear.setFocusable(false);
        btnVclear.setRequestFocusEnabled(false);
        btnVclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVclearActionPerformed(evt);
            }
        });

        jLabel78.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel78.setText("Item ID");

        txtfieldVitmid.setEditable(false);
        txtfieldVitmid.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        jLabel79.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel79.setText("Item Name");

        txtfieldVitmname.setEditable(false);
        txtfieldVitmname.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        jLabel80.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel80.setText("Description");

        txtfieldVdesc.setEditable(false);
        txtfieldVdesc.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        jLabel81.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel81.setText("Retail Price (RM)");

        txtfieldVRP.setEditable(false);
        txtfieldVRP.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        jLabel82.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel82.setText("Supplied by :");

        tblitmiup.setAutoCreateRowSorter(true);
        tblitmiup.setBackground(new java.awt.Color(214,192,179));
        tblitmiup.getTableHeader().setOpaque(false);
        tblitmiup.getTableHeader().setBackground(Color.decode("#AB886D"));
        tblitmiup.getTableHeader().setForeground(Color.decode("#E4E0E1"));
        tblitmiup.getTableHeader().setFont(new Font("Yu Gothic UI", Font.BOLD, 14));
        tblitmiup.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        tblitmiup.setForeground(new java.awt.Color(73, 54, 40));
        tblitmiup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "Unit Price (RM)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblitmiup.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tblitmiup);

        lblitmstatus1NoUse.setFont(new java.awt.Font("Yu Gothic UI", 2, 14)); // NOI18N
        lblitmstatus1NoUse.setForeground(new java.awt.Color(228, 224, 225));
        lblitmstatus1NoUse.setText("*Item needs to be restocked as soon as possible!");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel77)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbVitmid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnVclear))
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtfieldVitmid)
                                .addComponent(txtfieldVitmname)
                                .addComponent(txtfieldVdesc)
                                .addComponent(jLabel80)
                                .addComponent(jLabel79)
                                .addComponent(jLabel78)
                                .addComponent(jLabel81)
                                .addComponent(txtfieldVRP, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblitmstatus1NoUse)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel82)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbVitmid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel77)
                    .addComponent(btnVclear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel78)
                .addGap(6, 6, 6)
                .addComponent(txtfieldVitmid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel79)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfieldVitmname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel80)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfieldVdesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel81)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfieldVRP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblitmstatus1NoUse)
                .addGap(18, 18, 18)
                .addComponent(jLabel82)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnlVitmLayout = new javax.swing.GroupLayout(pnlVitm);
        pnlVitm.setLayout(pnlVitmLayout);
        pnlVitmLayout.setHorizontalGroup(
            pnlVitmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVitmLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(tblscrollpanelitem, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        pnlVitmLayout.setVerticalGroup(
            pnlVitmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVitmLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlVitmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tblscrollpanelitem)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout pnlViewItemsLayout = new javax.swing.GroupLayout(pnlViewItems);
        pnlViewItems.setLayout(pnlViewItemsLayout);
        pnlViewItemsLayout.setHorizontalGroup(
            pnlViewItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(pnlViewItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlVitm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlViewItemsLayout.setVerticalGroup(
            pnlViewItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
            .addGroup(pnlViewItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlVitm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View List of Items", pnlViewItems);

        pnlSalesEntry.setBackground(new java.awt.Color(228, 224, 225));

        txtItemID.setEditable(false);
        txtItemID.setForeground(java.awt.SystemColor.textInactiveText);
        txtItemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemIDActionPerformed(evt);
            }
        });

        spiQuantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spiQuantityStateChanged(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(73, 54, 40));
        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel1.setText("Item ID");

        jLabel3.setBackground(new java.awt.Color(73, 54, 40));
        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel3.setText("Quantity");

        jLabel4.setBackground(new java.awt.Color(73, 54, 40));
        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel4.setText("Receipt No (Auto Assign)");

        txtReceiptNo.setEditable(false);
        txtReceiptNo.setForeground(java.awt.SystemColor.textInactiveText);
        txtReceiptNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReceiptNoActionPerformed(evt);
            }
        });

        SalesTable.setBackground(new java.awt.Color(214,192,179));
        SalesTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        SalesTable.getTableHeader().setOpaque(false);
        SalesTable.getTableHeader().setBackground(Color.decode("#AB886D"));
        SalesTable.getTableHeader().setForeground(Color.decode("#E4E0E1"));
        SalesTable.getTableHeader().setFont(new Font("Yu Gothic UI", Font.BOLD, 14));
        SalesTable.setForeground(new java.awt.Color(73, 54, 40));
        SalesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Quantity", "Unit Price", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SalesTable.setRowHeight(23);
        SalesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(SalesTable);
        if (SalesTable.getColumnModel().getColumnCount() > 0) {
            SalesTable.getColumnModel().getColumn(0).setMinWidth(70);
            SalesTable.getColumnModel().getColumn(0).setPreferredWidth(70);
            SalesTable.getColumnModel().getColumn(0).setMaxWidth(70);
            SalesTable.getColumnModel().getColumn(2).setMinWidth(70);
            SalesTable.getColumnModel().getColumn(2).setPreferredWidth(70);
            SalesTable.getColumnModel().getColumn(2).setMaxWidth(70);
            SalesTable.getColumnModel().getColumn(3).setMinWidth(150);
            SalesTable.getColumnModel().getColumn(3).setPreferredWidth(150);
            SalesTable.getColumnModel().getColumn(3).setMaxWidth(150);
            SalesTable.getColumnModel().getColumn(4).setMinWidth(150);
            SalesTable.getColumnModel().getColumn(4).setPreferredWidth(150);
            SalesTable.getColumnModel().getColumn(4).setMaxWidth(150);
        }

        jLabel5.setBackground(new java.awt.Color(73, 54, 40));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel5.setText("Sales Manager ID");

        txtSM_ID.setEditable(false);
        txtSM_ID.setForeground(java.awt.SystemColor.textInactiveText);
        txtSM_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSM_IDActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(73, 54, 40));
        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("No. of Quantity:");

        txtNoQuantity.setEditable(false);
        txtNoQuantity.setForeground(java.awt.SystemColor.textInactiveText);
        txtNoQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoQuantityActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(73, 54, 40));
        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("No. of Items:");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        txtNoItems.setEditable(false);
        txtNoItems.setForeground(java.awt.SystemColor.textInactiveText);
        txtNoItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoItemsActionPerformed(evt);
            }
        });

        pnlPrices.setBackground(new java.awt.Color(214, 192, 179));

        jPanel5.setBackground(new java.awt.Color(214, 192, 179));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(73, 54, 40));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Subtotal");

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(73, 54, 40));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("GST 6%");

        jLabel11.setBackground(new java.awt.Color(102, 255, 102));
        jLabel11.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 204, 51));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Grand Total");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(214, 192, 179));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblGrandTotal.setBackground(new java.awt.Color(102, 255, 102));
        lblGrandTotal.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        lblGrandTotal.setForeground(new java.awt.Color(0, 204, 51));
        lblGrandTotal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblGrandTotal.setText("0.00");

        lblGST.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        lblGST.setForeground(new java.awt.Color(73, 54, 40));
        lblGST.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblGST.setText("0.00");

        lblSubtotal.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        lblSubtotal.setForeground(new java.awt.Color(73, 54, 40));
        lblSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSubtotal.setText("0.00");

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(73, 54, 40));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("RM");

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(73, 54, 40));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("RM");

        jLabel19.setBackground(new java.awt.Color(102, 255, 102));
        jLabel19.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 204, 51));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText("RM");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSubtotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(lblGST, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblGrandTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGST, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlPricesLayout = new javax.swing.GroupLayout(pnlPrices);
        pnlPrices.setLayout(pnlPricesLayout);
        pnlPricesLayout.setHorizontalGroup(
            pnlPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPricesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPricesLayout.setVerticalGroup(
            pnlPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPricesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPricesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtSM_Name.setEditable(false);
        txtSM_Name.setForeground(java.awt.SystemColor.textInactiveText);
        txtSM_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSM_NameActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(73, 54, 40));
        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel8.setText("Sales Manager Name");

        btnAddItem.setText("Add Item");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnAddSale.setBackground(new java.awt.Color(214, 192, 179));
        btnAddSale.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        btnAddSale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CashierIcon.png"))); // NOI18N
        btnAddSale.setText(" Add Sale");
        btnAddSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSaleActionPerformed(evt);
            }
        });

        cmbItemID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select..." }));
        cmbItemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemIDActionPerformed(evt);
            }
        });

        btnRemoveAll.setText("Remove All");
        btnRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAllActionPerformed(evt);
            }
        });

        btnConfirmEdit.setText("Confirm Edit");
        btnConfirmEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmEditActionPerformed(evt);
            }
        });

        btnCancelEdit.setText("Cancel Edit");
        btnCancelEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSalesEntryLayout = new javax.swing.GroupLayout(pnlSalesEntry);
        pnlSalesEntry.setLayout(pnlSalesEntryLayout);
        pnlSalesEntryLayout.setHorizontalGroup(
            pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSalesEntryLayout.createSequentialGroup()
                        .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                                .addComponent(cmbItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                                        .addComponent(spiQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnConfirmEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 362, Short.MAX_VALUE)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel5)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel8)
                        .addGap(867, 867, 867))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSalesEntryLayout.createSequentialGroup()
                        .addComponent(txtReceiptNo, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(txtSM_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSM_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveAll, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSalesEntryLayout.createSequentialGroup()
                        .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                                .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(6, 6, 6)
                                .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNoQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNoItems, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSalesEntryLayout.createSequentialGroup()
                                .addGap(0, 787, Short.MAX_VALUE)
                                .addComponent(btnAddSale)))
                        .addGap(18, 18, 18)
                        .addComponent(pnlPrices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        pnlSalesEntryLayout.setVerticalGroup(
            pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addGap(0, 0, 0)
                .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtReceiptNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSM_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSM_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRemoveAll)
                        .addComponent(btnRemove)))
                .addGap(7, 7, 7)
                .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, 0)
                        .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, 0)
                        .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spiQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddItem)
                            .addComponent(btnConfirmEdit)
                            .addComponent(btnCancelEdit)
                            .addComponent(btnEdit))))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlPrices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSalesEntryLayout.createSequentialGroup()
                        .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNoQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSalesEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtNoItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(btnAddSale, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sales Entry", pnlSalesEntry);

        pnlSalesReport.setBackground(new java.awt.Color(228, 224, 225));

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month...", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        cmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year..." }));

        jLabel30.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel30.setText("Total Number of Sales");

        lblNumberOfSales.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblNumberOfSales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumberOfSales.setText("0");
        lblNumberOfSales.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNumberOfSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberOfSales, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel31.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel31.setText("Total Revenue");

        lblRevenue.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblRevenue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRevenue.setText("RM0.00");
        lblRevenue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(lblRevenue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRevenue, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel32.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel32.setText("Total Item Sold");

        lblItemSold.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblItemSold.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblItemSold.setText("0");
        lblItemSold.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(lblItemSold, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblItemSold, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnDisplay.setText("Display");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });

        pnlPieChart.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(pnlPieChart, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(pnlPieChart, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pnlBarChart.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(pnlBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(pnlBarChart, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout pnlSalesReportLayout = new javax.swing.GroupLayout(pnlSalesReport);
        pnlSalesReport.setLayout(pnlSalesReportLayout);
        pnlSalesReportLayout.setHorizontalGroup(
            pnlSalesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalesReportLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlSalesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSalesReportLayout.createSequentialGroup()
                        .addGroup(pnlSalesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSalesReportLayout.createSequentialGroup()
                        .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        pnlSalesReportLayout.setVerticalGroup(
            pnlSalesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalesReportLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlSalesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDisplay))
                .addGap(20, 20, 20)
                .addGroup(pnlSalesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSalesReportLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sales Report", pnlSalesReport);

        pnlStockLevel.setBackground(new java.awt.Color(228, 224, 225));

        pnlVI.setBackground(new java.awt.Color(228, 224, 225));

        tblinventory.setBackground(new java.awt.Color(214,192,179));
        tblinventory.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        tblinventory.getTableHeader().setOpaque(false);
        tblinventory.getTableHeader().setBackground(Color.decode("#AB886D"));
        tblinventory.getTableHeader().setForeground(Color.decode("#E4E0E1"));
        tblinventory.getTableHeader().setFont(new Font("Yu Gothic UI", Font.BOLD, 14));
        tblinventory.setForeground(new java.awt.Color(73, 54, 40));
        tblinventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Description", "Quantity in Stock", "Reorder Level"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblinventory.setGridColor(new java.awt.Color(214, 192, 179));
        tblinventory.getTableHeader().setReorderingAllowed(false);
        tblinventory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblinventoryMouseClicked(evt);
            }
        });
        tblscrollpanel.setViewportView(tblinventory);
        if (tblinventory.getColumnModel().getColumnCount() > 0) {
            tblinventory.getColumnModel().getColumn(0).setMinWidth(80);
            tblinventory.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblinventory.getColumnModel().getColumn(0).setMaxWidth(80);
            tblinventory.getColumnModel().getColumn(1).setMinWidth(170);
            tblinventory.getColumnModel().getColumn(1).setPreferredWidth(170);
            tblinventory.getColumnModel().getColumn(1).setMaxWidth(170);
            tblinventory.getColumnModel().getColumn(3).setMinWidth(150);
            tblinventory.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblinventory.getColumnModel().getColumn(3).setMaxWidth(150);
            tblinventory.getColumnModel().getColumn(4).setMinWidth(140);
            tblinventory.getColumnModel().getColumn(4).setPreferredWidth(140);
            tblinventory.getColumnModel().getColumn(4).setMaxWidth(140);
        }

        pnladddetails.setBackground(new java.awt.Color(228, 224, 225));
        pnladddetails.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(171, 136, 109), 4, true));

        tbliup.setAutoCreateRowSorter(true);
        tbliup.setBackground(new java.awt.Color(214,192,179));
        tbliup.getTableHeader().setOpaque(false);
        tbliup.getTableHeader().setBackground(Color.decode("#AB886D"));
        tbliup.getTableHeader().setForeground(Color.decode("#E4E0E1"));
        tbliup.getTableHeader().setFont(new Font("Yu Gothic UI", Font.BOLD, 14));
        tbliup.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        tbliup.setForeground(new java.awt.Color(73, 54, 40));
        tbliup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "Unit Price (RM)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbliup.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tbliup);

        jLabel50.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel50.setText("Item ID");

        jLabel70.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel70.setText("Item Name");

        jLabel71.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel71.setText("Description");

        txtfielditmid.setEditable(false);
        txtfielditmid.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        txtfieldname.setEditable(false);
        txtfieldname.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        txtfielddesc.setEditable(false);
        txtfielddesc.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        jLabel73.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel73.setText("Quantity in Stock");

        jLabel74.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel74.setText("Reorder Level");

        txtfieldQiS.setEditable(false);
        txtfieldQiS.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        txtfieldRL.setEditable(false);
        txtfieldRL.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N

        jLabel75.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel75.setText("Supplied by :");

        lblitmstatus.setFont(new java.awt.Font("Yu Gothic UI", 2, 14)); // NOI18N
        lblitmstatus.setForeground(new java.awt.Color(228, 224, 225));
        lblitmstatus.setText("*Item needs to be restocked as soon as possible!");

        lblstatusstar.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        lblstatusstar.setForeground(new java.awt.Color(228, 224, 225));
        lblstatusstar.setText("*");

        cmbitmid.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        cmbitmid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select..." }));
        cmbitmid.setFocusable(false);
        cmbitmid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbitmidActionPerformed(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnclear.setText("Clear");
        btnclear.setFocusPainted(false);
        btnclear.setFocusable(false);
        btnclear.setRequestFocusEnabled(false);
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        jLabel76.setFont(new java.awt.Font("Yu Gothic UI", 1, 16)); // NOI18N
        jLabel76.setText("Item ID :");

        javax.swing.GroupLayout pnladddetailsLayout = new javax.swing.GroupLayout(pnladddetails);
        pnladddetails.setLayout(pnladddetailsLayout);
        pnladddetailsLayout.setHorizontalGroup(
            pnladddetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(pnladddetailsLayout.createSequentialGroup()
                .addGroup(pnladddetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnladddetailsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnladddetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnladddetailsLayout.createSequentialGroup()
                                .addComponent(jLabel76)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbitmid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnclear))
                            .addGroup(pnladddetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel71)
                                .addComponent(jLabel70)
                                .addComponent(jLabel50)
                                .addComponent(txtfielditmid)
                                .addComponent(txtfieldname)
                                .addComponent(txtfielddesc)
                                .addGroup(pnladddetailsLayout.createSequentialGroup()
                                    .addComponent(jLabel73)
                                    .addGap(3, 3, 3)
                                    .addComponent(lblstatusstar, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40)
                                    .addComponent(jLabel74))
                                .addGroup(pnladddetailsLayout.createSequentialGroup()
                                    .addComponent(txtfieldQiS, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtfieldRL))
                                .addComponent(lblitmstatus, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))))
                    .addGroup(pnladddetailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel75)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnladddetailsLayout.setVerticalGroup(
            pnladddetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnladddetailsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(pnladddetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbitmid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel76)
                    .addComponent(btnclear))
                .addGap(18, 18, 18)
                .addComponent(jLabel50)
                .addGap(6, 6, 6)
                .addComponent(txtfielditmid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel70)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfieldname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel71)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfielddesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnladddetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(jLabel74)
                    .addComponent(lblstatusstar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnladddetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfieldQiS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfieldRL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblitmstatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabel75)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnlVILayout = new javax.swing.GroupLayout(pnlVI);
        pnlVI.setLayout(pnlVILayout);
        pnlVILayout.setHorizontalGroup(
            pnlVILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVILayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(tblscrollpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(pnladddetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        pnlVILayout.setVerticalGroup(
            pnlVILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlVILayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlVILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnladddetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tblscrollpanel))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlStockLevelLayout = new javax.swing.GroupLayout(pnlStockLevel);
        pnlStockLevel.setLayout(pnlStockLevelLayout);
        pnlStockLevelLayout.setHorizontalGroup(
            pnlStockLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(pnlStockLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlVI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlStockLevelLayout.setVerticalGroup(
            pnlStockLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
            .addGroup(pnlStockLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlVI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Inventory", pnlStockLevel);

        pnlCreatePR.setBackground(new java.awt.Color(228, 224, 225));

        jTabbedPane2.setBackground(new java.awt.Color(228, 224, 225));
        jTabbedPane2.setForeground(new java.awt.Color(73, 54, 40));
        jTabbedPane2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N
        jTabbedPane2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane2StateChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(228, 224, 225));

        txtPRID.setEditable(false);
        txtPRID.setForeground(java.awt.SystemColor.textInactiveText);
        txtPRID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPRIDActionPerformed(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(73, 54, 40));
        jLabel13.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel13.setText("New Purchase Requisite ID ");

        jLabel14.setBackground(new java.awt.Color(73, 54, 40));
        jLabel14.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel14.setText("Request Date");

        txtReqTimestamp.setEditable(false);
        txtReqTimestamp.setForeground(java.awt.SystemColor.textInactiveText);
        txtReqTimestamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReqTimestampActionPerformed(evt);
            }
        });

        txtReqbyName.setEditable(false);
        txtReqbyName.setForeground(java.awt.SystemColor.textInactiveText);
        txtReqbyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReqbyNameActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(73, 54, 40));
        jLabel15.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel15.setText("Requested by");

        txtReqbyID.setEditable(false);
        txtReqbyID.setForeground(java.awt.SystemColor.textInactiveText);
        txtReqbyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReqbyIDActionPerformed(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(73, 54, 40));
        jLabel16.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel16.setText("ID");

        jLabel21.setBackground(new java.awt.Color(73, 54, 40));
        jLabel21.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel21.setText("Item ID");

        btnSearch1.setText("Search");
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });

        PRScrollPane.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setPreferredSize(new java.awt.Dimension(730, 480));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NexusLogoBlackSmall.png"))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel12.setText("PURCHASE REQUISITION");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel22.setText("Purchase Requisite ID :");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel23.setText("Request Date :");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel24.setText("Requested by :");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel25.setText("Staff ID :");

        lblRequestDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRequestDate.setText("Request Date");

        lblPRID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPRID.setText("Purchase Requisite ID");

        lblRequestName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRequestName.setText("Requested Name");

        lblRequestStaffID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRequestStaffID.setText("Requested Staff ID");

        PRItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Current Stock", "Reorder Stock", "Quantity Needed"
            }
        ));
        PRItemTable.setFocusable(false);
        PRItemTable.setRequestFocusEnabled(false);
        PRItemTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(PRItemTable);
        if (PRItemTable.getColumnModel().getColumnCount() > 0) {
            PRItemTable.getColumnModel().getColumn(0).setMinWidth(75);
            PRItemTable.getColumnModel().getColumn(0).setPreferredWidth(75);
            PRItemTable.getColumnModel().getColumn(0).setMaxWidth(75);
            PRItemTable.getColumnModel().getColumn(2).setMinWidth(100);
            PRItemTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            PRItemTable.getColumnModel().getColumn(2).setMaxWidth(100);
            PRItemTable.getColumnModel().getColumn(3).setMinWidth(100);
            PRItemTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            PRItemTable.getColumnModel().getColumn(3).setMaxWidth(100);
            PRItemTable.getColumnModel().getColumn(4).setMinWidth(100);
            PRItemTable.getColumnModel().getColumn(4).setPreferredWidth(100);
            PRItemTable.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel26.setText("Quantity Requested :");

        lblRequestQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRequestQuantity.setText("Quantity");

        lblApprovedStaffID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblApprovedStaffID.setText("Pending");

        lblApprovedName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblApprovedName.setText("Pending");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel27.setText("Approved by :");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel28.setText("Staff ID :");

        lblApprovedDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblApprovedDate.setText("Pending");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel29.setText("Approval Date :");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(226, 226, 226))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(jLabel20))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblRequestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPRID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRequestName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRequestStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel29))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                            .addComponent(lblApprovedName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblRequestQuantity)
                                            .addGap(2, 2, 2))
                                        .addComponent(lblApprovedStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblApprovedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(lblPRID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRequestDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(lblRequestName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(lblRequestStaffID))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(lblApprovedName)
                    .addComponent(jLabel26)
                    .addComponent(lblRequestQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(lblApprovedStaffID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApprovedDate)
                    .addComponent(jLabel29))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        PRScrollPane.setViewportView(jPanel7);

        cmbPRItemID.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        cmbPRItemID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", " " }));
        cmbPRItemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPRItemIDActionPerformed(evt);
            }
        });

        spiQuantityPR.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spiQuantityPRStateChanged(evt);
            }
        });

        lblQuantityNeeded.setBackground(new java.awt.Color(73, 54, 40));
        lblQuantityNeeded.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        lblQuantityNeeded.setText("Quantity Needed");

        lblCurrentStock.setBackground(new java.awt.Color(73, 54, 40));
        lblCurrentStock.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        lblCurrentStock.setText("Current Stock");

        lblReorderLevel.setBackground(new java.awt.Color(73, 54, 40));
        lblReorderLevel.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        lblReorderLevel.setText("Reorder Level");
        lblReorderLevel.setPreferredSize(new java.awt.Dimension(80, 16));

        lblStockStatus.setBackground(new java.awt.Color(73, 54, 40));
        lblStockStatus.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        lblStockStatus.setText("Stock Status");

        txtCurrentStock.setEditable(false);
        txtCurrentStock.setForeground(java.awt.SystemColor.textInactiveText);
        txtCurrentStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentStockActionPerformed(evt);
            }
        });

        txtReorderLevel.setEditable(false);
        txtReorderLevel.setForeground(java.awt.SystemColor.textInactiveText);
        txtReorderLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReorderLevelActionPerformed(evt);
            }
        });

        txtStockStatus.setEditable(false);
        txtStockStatus.setForeground(java.awt.SystemColor.textInactiveText);
        txtStockStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStockStatusActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(cmbPRItemID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtReqTimestamp))
                            .addGap(21, 21, 21)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15)
                                .addComponent(txtReqbyName, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtReqbyID)))
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPRID)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblQuantityNeeded, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spiQuantityPR, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCurrentStock)
                                .addComponent(lblCurrentStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblReorderLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtReorderLevel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtStockStatus)
                                .addComponent(lblStockStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                .addComponent(PRScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(PRScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, 0)
                        .addComponent(txtPRID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(0, 0, 0)
                                .addComponent(txtReqTimestamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(0, 0, 0)
                                .addComponent(txtReqbyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(0, 0, 0)
                                .addComponent(txtReqbyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel21)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbPRItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCurrentStock)
                            .addComponent(lblReorderLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStockStatus))
                        .addGap(0, 0, 0)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCurrentStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReorderLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStockStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblQuantityNeeded)
                        .addGap(0, 0, 0)
                        .addComponent(spiQuantityPR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(170, 170, 170))))
        );

        jTabbedPane2.addTab("New", jPanel1);

        jPanel2.setBackground(new java.awt.Color(228, 224, 225));

        ScrollPaneViewPR.setBackground(new java.awt.Color(255, 255, 255));

        pnlViewPR.setBackground(new java.awt.Color(255, 255, 255));
        pnlViewPR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlViewPR.setPreferredSize(new java.awt.Dimension(730, 480));

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/NexusLogoBlackSmall.png"))); // NOI18N

        jLabel34.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel34.setText("PURCHASE REQUISITION");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel35.setText("Purchase Requisite ID :");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel36.setText("Request Date :");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel37.setText("Requested by :");

        jLabel38.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel38.setText("Staff ID :");

        lblViewRequestDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewRequestDate.setText("Request Date");

        lblViewPRID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPRID.setText("Purchase Requisite ID");

        lblViewRequestName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewRequestName.setText("Requested Name");

        lblViewRequestStaffID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewRequestStaffID.setText("Requested Staff ID");

        PRViewItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Current Stock", "Reorder Level", "Quantity Needed"
            }
        ));
        PRViewItemTable.setFocusable(false);
        PRViewItemTable.setRequestFocusEnabled(false);
        PRViewItemTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(PRViewItemTable);
        if (PRViewItemTable.getColumnModel().getColumnCount() > 0) {
            PRViewItemTable.getColumnModel().getColumn(0).setMinWidth(75);
            PRViewItemTable.getColumnModel().getColumn(0).setPreferredWidth(75);
            PRViewItemTable.getColumnModel().getColumn(0).setMaxWidth(75);
            PRViewItemTable.getColumnModel().getColumn(2).setMinWidth(100);
            PRViewItemTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            PRViewItemTable.getColumnModel().getColumn(2).setMaxWidth(100);
            PRViewItemTable.getColumnModel().getColumn(3).setMinWidth(100);
            PRViewItemTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            PRViewItemTable.getColumnModel().getColumn(3).setMaxWidth(100);
            PRViewItemTable.getColumnModel().getColumn(4).setMinWidth(100);
            PRViewItemTable.getColumnModel().getColumn(4).setPreferredWidth(100);
            PRViewItemTable.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel39.setText("Quantity Requested :");

        lblViewRequestQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblViewRequestQuantity.setText("Quantity");

        lblViewApprovedStaffID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewApprovedStaffID.setText("Pending");

        lblViewApprovedName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewApprovedName.setText("Pending");

        lblViewApprovedDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewApprovedDate.setText("Pending");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel40.setText("Approved by :");

        jLabel41.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel41.setText("Staff ID :");

        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel42.setText("Approval Date :");

        javax.swing.GroupLayout pnlViewPRLayout = new javax.swing.GroupLayout(pnlViewPR);
        pnlViewPR.setLayout(pnlViewPRLayout);
        pnlViewPRLayout.setHorizontalGroup(
            pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewPRLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel34)
                .addGap(226, 226, 226))
            .addGroup(pnlViewPRLayout.createSequentialGroup()
                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlViewPRLayout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(jLabel33))
                    .addGroup(pnlViewPRLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlViewPRLayout.createSequentialGroup()
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblViewRequestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlViewPRLayout.createSequentialGroup()
                                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblViewPRID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblViewRequestName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblViewRequestStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnlViewPRLayout.createSequentialGroup()
                                    .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel42))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlViewPRLayout.createSequentialGroup()
                                            .addComponent(lblViewApprovedName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblViewRequestQuantity)
                                            .addGap(2, 2, 2))
                                        .addComponent(lblViewApprovedStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblViewApprovedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        pnlViewPRLayout.setVerticalGroup(
            pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewPRLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(lblViewPRID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblViewRequestDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(lblViewRequestName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(lblViewRequestStaffID))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(lblViewApprovedName)
                    .addComponent(jLabel39)
                    .addComponent(lblViewRequestQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(lblViewApprovedStaffID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewApprovedDate)
                    .addComponent(jLabel42))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        ScrollPaneViewPR.setViewportView(pnlViewPR);

        jLabel43.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel43.setText("Purchase Requisite ID");

        cmbPRID.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        cmbPRID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select..." }));
        cmbPRID.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbPRIDPropertyChange(evt);
            }
        });

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbPRID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                .addComponent(ScrollPaneViewPR, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbPRID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addComponent(ScrollPaneViewPR, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("View", jPanel2);

        javax.swing.GroupLayout pnlCreatePRLayout = new javax.swing.GroupLayout(pnlCreatePR);
        pnlCreatePR.setLayout(pnlCreatePRLayout);
        pnlCreatePRLayout.setHorizontalGroup(
            pnlCreatePRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        pnlCreatePRLayout.setVerticalGroup(
            pnlCreatePRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Purchase Requisite", pnlCreatePR);

        pnlViewPO.setBackground(new java.awt.Color(228, 224, 225));

        ScrollPaneViewPO.setBackground(new java.awt.Color(255, 255, 255));

        pnlViewPurchaseOrder.setBackground(new java.awt.Color(255, 255, 255));
        pnlViewPurchaseOrder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlViewPurchaseOrder.setPreferredSize(new java.awt.Dimension(738, 616));

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NexusLogoBlackSmall.png"))); // NOI18N

        jLabel45.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("PURCHASE ORDER");

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel46.setText("Purchase Order ID :");

        jLabel47.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel47.setText("Date :");

        jLabel48.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel48.setText("Prepared by :");

        jLabel49.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel49.setText("Staff ID :");

        lblViewPODate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPODate.setText("Date");

        lblViewPOID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPOID.setText("Purchase Order ID");

        lblViewPOName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPOName.setText("Prepared Name");

        lblViewPOStaffID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPOStaffID.setText("Prepared Staff ID");

        POViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Quantity", "Price", "Total"
            }
        ));
        POViewTable.setFocusable(false);
        POViewTable.setRequestFocusEnabled(false);
        POViewTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(POViewTable);
        if (POViewTable.getColumnModel().getColumnCount() > 0) {
            POViewTable.getColumnModel().getColumn(0).setMinWidth(75);
            POViewTable.getColumnModel().getColumn(0).setPreferredWidth(75);
            POViewTable.getColumnModel().getColumn(0).setMaxWidth(75);
            POViewTable.getColumnModel().getColumn(2).setMinWidth(100);
            POViewTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            POViewTable.getColumnModel().getColumn(2).setMaxWidth(100);
            POViewTable.getColumnModel().getColumn(3).setMinWidth(100);
            POViewTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            POViewTable.getColumnModel().getColumn(3).setMaxWidth(100);
            POViewTable.getColumnModel().getColumn(4).setMinWidth(100);
            POViewTable.getColumnModel().getColumn(4).setPreferredWidth(100);
            POViewTable.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        lblViewPOApprovedStaffID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPOApprovedStaffID.setText("Pending");

        lblViewPOApprovedName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPOApprovedName.setText("Pending");

        lblViewPOApprovedDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPOApprovedDate.setText("Pending");

        jLabel51.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel51.setText("Approved by :");

        jLabel52.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel52.setText("Staff ID :");

        jLabel53.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel53.setText("Approval Date :");

        jLabel66.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel66.setText("Supplier :");

        lblViewPOSupplier.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPOSupplier.setText("Prepared Name");

        lblViewPOSuppID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewPOSuppID.setText("Prepared Staff ID");

        jLabel67.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel67.setText("Supplier ID :");

        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));

        jLabel68.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel68.setText("Delivery");

        lblViewDelStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewDelStatus.setText("Pending");

        jLabel69.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel69.setText("Status :");

        jLabel72.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel72.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel72.setText("Delivered Date :");

        lblViewDelDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblViewDelDate.setText("Pending");

        javax.swing.GroupLayout pnlViewPurchaseOrderLayout = new javax.swing.GroupLayout(pnlViewPurchaseOrder);
        pnlViewPurchaseOrder.setLayout(pnlViewPurchaseOrderLayout);
        pnlViewPurchaseOrderLayout.setHorizontalGroup(
            pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel68)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                        .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel53))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblViewPOApprovedName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblViewPOApprovedStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblViewPOApprovedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblViewPODate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlViewPurchaseOrderLayout.createSequentialGroup()
                            .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblViewPOID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                                    .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblViewPOName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblViewPOStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jLabel67, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblViewPOSuppID, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                        .addComponent(lblViewPOSupplier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(21, 21, 21))))
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                        .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel69, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblViewDelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblViewDelStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlViewPurchaseOrderLayout.setVerticalGroup(
            pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(lblViewPOID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblViewPODate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                        .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(lblViewPOName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(lblViewPOStaffID)))
                    .addGroup(pnlViewPurchaseOrderLayout.createSequentialGroup()
                        .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel66)
                            .addComponent(lblViewPOSupplier))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel67)
                            .addComponent(lblViewPOSuppID))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(lblViewPOApprovedName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(lblViewPOApprovedStaffID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewPOApprovedDate)
                    .addComponent(jLabel53))
                .addGap(18, 18, 18)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel68)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(lblViewDelStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewPurchaseOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewDelDate)
                    .addComponent(jLabel72))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ScrollPaneViewPO.setViewportView(pnlViewPurchaseOrder);

        cmbPOID.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        cmbPOID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select..." }));
        cmbPOID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPOIDActionPerformed(evt);
            }
        });
        cmbPOID.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbPOIDPropertyChange(evt);
            }
        });

        jLabel65.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel65.setText("Purchase Order ID");

        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlViewPOLayout = new javax.swing.GroupLayout(pnlViewPO);
        pnlViewPO.setLayout(pnlViewPOLayout);
        pnlViewPOLayout.setHorizontalGroup(
            pnlViewPOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewPOLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlViewPOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbPOID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                .addComponent(ScrollPaneViewPO, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnlViewPOLayout.setVerticalGroup(
            pnlViewPOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewPOLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(pnlViewPOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlViewPOLayout.createSequentialGroup()
                        .addComponent(jLabel65)
                        .addGap(0, 0, 0)
                        .addGroup(pnlViewPOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbPOID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)))
                    .addComponent(ScrollPaneViewPO, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );

        jTabbedPane1.addTab("View Purchase Order", pnlViewPO);

        jPanel12.setBackground(new java.awt.Color(228, 224, 225));
        jPanel12.setLayout(null);

        jPanel13.setBackground(new java.awt.Color(214, 192, 179));
        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel54.setFont(new java.awt.Font("Yu Gothic UI", 0, 36)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(73, 54, 40));
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel54.setText("Profile");

        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/profile-modified (1).png"))); // NOI18N

        ProfileID.setFont(new java.awt.Font("Yu Gothic UI", 1, 20)); // NOI18N
        ProfileID.setForeground(new java.awt.Color(73, 54, 40));
        ProfileID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProfileID.setText("Profile ID");

        ProfileUserType.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        ProfileUserType.setForeground(new java.awt.Color(73, 54, 40));
        ProfileUserType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProfileUserType.setText("Profile Type");

        jSeparator4.setBackground(new java.awt.Color(171, 136, 109));
        jSeparator4.setForeground(new java.awt.Color(171, 136, 109));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel56.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(73, 54, 40));
        jLabel56.setText("First Name");

        jLabel57.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(73, 54, 40));
        jLabel57.setText("Last Name");

        jLabel58.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(73, 54, 40));
        jLabel58.setText("Gender");

        jLabel59.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(73, 54, 40));
        jLabel59.setText("Contact No.");

        jLabel60.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(73, 54, 40));
        jLabel60.setText("Email");

        jSeparator5.setBackground(new java.awt.Color(171, 136, 109));
        jSeparator5.setForeground(new java.awt.Color(73, 54, 40));
        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        ProfileFN.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        ProfileFN.setForeground(new java.awt.Color(102, 102, 102));
        ProfileFN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ProfileFN.setText("First Name");

        ProfileLN.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        ProfileLN.setForeground(new java.awt.Color(102, 102, 102));
        ProfileLN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ProfileLN.setText("Last Name");

        ProfileGender.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        ProfileGender.setForeground(new java.awt.Color(102, 102, 102));
        ProfileGender.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ProfileGender.setText("Gender");

        ProfileEmail.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        ProfileEmail.setForeground(new java.awt.Color(102, 102, 102));
        ProfileEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ProfileEmail.setText("Email");

        ProfileContact.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        ProfileContact.setForeground(new java.awt.Color(102, 102, 102));
        ProfileContact.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ProfileContact.setText("Contact No.");

        jLabel61.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(171, 136, 109));
        jLabel61.setText("*Contact the administrator to change personal details");

        jLabel62.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(73, 54, 40));
        jLabel62.setText("Change Password");

        jLabel63.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(73, 54, 40));
        jLabel63.setText("Current Password");

        jLabel64.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(73, 54, 40));
        jLabel64.setText("New Password");

        ProfileCurrentPass.setBackground(new java.awt.Color(228, 224, 225));
        ProfileCurrentPass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ProfileCurrentPass.setForeground(new java.awt.Color(83, 60, 43));
        ProfileCurrentPass.setToolTipText("Password");
        ProfileCurrentPass.setBorder(null);
        ProfileCurrentPass.setMinimumSize(new java.awt.Dimension(64, 26));
        ProfileCurrentPass.setPreferredSize(new java.awt.Dimension(64, 26));
        ProfileCurrentPass.setSelectionColor(new java.awt.Color(178, 152, 132));

        ProfileNewPass.setBackground(new java.awt.Color(228, 224, 225));
        ProfileNewPass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ProfileNewPass.setForeground(new java.awt.Color(83, 60, 43));
        ProfileNewPass.setToolTipText("Password");
        ProfileNewPass.setBorder(null);
        ProfileNewPass.setMinimumSize(new java.awt.Dimension(64, 26));
        ProfileNewPass.setPreferredSize(new java.awt.Dimension(64, 26));
        ProfileNewPass.setSelectionColor(new java.awt.Color(178, 152, 132));

        ProfileChgPass.setBackground(new java.awt.Color(228, 224, 225));
        ProfileChgPass.setFont(new java.awt.Font("Yu Gothic UI", 1, 20)); // NOI18N
        ProfileChgPass.setForeground(new java.awt.Color(46, 36, 28));
        ProfileChgPass.setText("Reset Password");
        ProfileChgPass.setBorder(null);
        ProfileChgPass.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ProfileChgPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfileChgPassActionPerformed(evt);
            }
        });

        ChgPassError.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ChgPassError.setForeground(new java.awt.Color(255, 0, 51));

        ShowHidePass.setBackground(new java.awt.Color(228, 224, 225));
        ShowHidePass.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        ShowHidePass.setText("Show");
        ShowHidePass.setBorder(null);
        ShowHidePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowHidePassActionPerformed(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(228, 224, 225));
        btnLogout.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(46, 36, 28));
        btnLogout.setText("Logout");
        btnLogout.setBorder(null);
        btnLogout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15))
                                    .addComponent(ProfileID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(92, 92, 92)))
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(ProfileUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel56)
                            .addComponent(jLabel57)
                            .addComponent(jLabel58)
                            .addComponent(jLabel60)
                            .addComponent(jLabel59))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ProfileLN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ProfileGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ProfileFN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ProfileEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ProfileContact, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161)))
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ShowHidePass, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ProfileNewPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ProfileCurrentPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ProfileChgPass, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
                    .addComponent(ChgPassError, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel54)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel56)
                            .addComponent(ProfileFN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel57)
                            .addComponent(ProfileLN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProfileGender, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel58))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel60)
                            .addComponent(ProfileEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProfileContact, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel59))
                        .addGap(34, 34, 34)
                        .addComponent(jLabel61, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel13Layout.createSequentialGroup()
                                .addComponent(ProfileUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel55)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ProfileID, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addGap(108, 108, 108)
                                        .addComponent(ChgPassError, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ProfileChgPass, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(20, 20, 20)))
                .addGap(15, 15, 15))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel63)
                        .addGap(18, 18, 18)
                        .addComponent(ProfileCurrentPass, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel64)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(ShowHidePass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProfileNewPass, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.add(jPanel13);
        jPanel13.setBounds(20, 28, 1230, 420);

        jTabbedPane1.addTab("Profile", jPanel12);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(pnlTopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PnlSMDashboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(pnlTopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PnlSMDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ItemComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemComboBoxActionPerformed

    private void txtReceiptNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReceiptNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReceiptNoActionPerformed

    private void txtSM_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSM_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSM_IDActionPerformed

    private void txtNoQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoQuantityActionPerformed

    private void txtNoItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoItemsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoItemsActionPerformed

    private void txtSM_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSM_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSM_NameActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        // TODO add your handling code here:
        String AddItemID = cmbItemID.getSelectedItem().toString();
        int AddItemQuantity = (Integer) spiQuantity.getValue();
        if (AddItemQuantity == 0){
            JOptionPane.showMessageDialog(this,"Quantity Cannot be 0!","Cannot Add Item!",JOptionPane.ERROR_MESSAGE);
        } else {
            if (sm.CheckItemValid(ItemList,AddItemID) == true){
                int ItemIndex = sm.ReturnItemIndex(ItemList, AddItemID);
                if (AddItemQuantity <= ItemList.get(ItemIndex).getQuantityInStock()){
                    cmbItemID.removeItem(AddItemID);
                    DefaultTableModel model = (DefaultTableModel) SalesTable.getModel();
                    double ItemSubtotal = ItemList.get(ItemIndex).getRetailPrice()*AddItemQuantity;
                    
                    Object rowData[] = new Object[5];

                    rowData[0] = AddItemID;
                    rowData[1] = ItemList.get(ItemIndex).getItemName();
                    rowData[2] = AddItemQuantity;
                    rowData[3] = rm.format(ItemList.get(ItemIndex).getRetailPrice());
                    rowData[4] = rm.format(ItemSubtotal);

                    model.addRow(rowData);
                    cmbItemID.setSelectedIndex(0);
                    spiQuantity.setValue(0);
                    FindNoOfItemQuantity();
                    CountMoney();
                } else {
                    JOptionPane.showMessageDialog(this,"Not Enough Stock for Item!","Low on Stock!",JOptionPane.ERROR_MESSAGE);
                }
               
            } else {
                JOptionPane.showMessageDialog(this,"Please double check the item you requested!","Item not found!",JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void spiQuantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spiQuantityStateChanged
        // TODO add your handling code here:
        if ( (Integer) spiQuantity.getValue() < 0){
            spiQuantity.setValue(0);
            JOptionPane.showMessageDialog(this,"No negative value accepted!","Negative value found!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_spiQuantityStateChanged

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        ListSelectionModel cellSelectionModel = SalesTable.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        int SelectedRowRem = SalesTable.getSelectedRow();
        
        if (SelectedRowRem != -1){
            int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to remove the item?","Remove Item",JOptionPane.YES_NO_OPTION);
            if (confirmed == JOptionPane.YES_OPTION){
                DefaultTableModel dtm = (DefaultTableModel) SalesTable.getModel();
                dtm.removeRow(SelectedRowRem);
                
                WriteItemComboBox(cmbItemID);
                
                for (int i = 0; i < cmbItemID.getItemCount();i++){
                    for (int j = 0; j < SalesTable.getRowCount(); j++){
                        if (SalesTable.getValueAt(j, 0).equals(cmbItemID.getItemAt(i))){
                            cmbItemID.removeItemAt(i);
                        }
                    } 
                }
                CountMoney();
                JOptionPane.showMessageDialog(this,"Item Removed Successfully!","Item Removed",JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this,"Please select an item to remove!","Item not selected!",JOptionPane.ERROR_MESSAGE);
        }
        

        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAddSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSaleActionPerformed
        // TODO add your handling code here:
        if (SalesTable.getRowCount() == 0){
            JOptionPane.showMessageDialog(this,"Please add items!","No Item Found!",JOptionPane.ERROR_MESSAGE);
        } else {
            int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to proceed?","Add Sale",JOptionPane.YES_NO_OPTION);
            if (confirmed == JOptionPane.YES_OPTION){
                //Run here
                Timestamp timestamp = new Timestamp(System.currentTimeMillis());
                for (int i = 0; i < SalesTable.getRowCount(); i++){
                    SalesList.add(new Sales(
                    txtReceiptNo.getText(),
                    txtSM_ID.getText(),
                    tmstmp.format(timestamp),
                    SalesTable.getValueAt(i, 0).toString(),
                    Double.parseDouble(SalesTable.getValueAt(i, 3).toString().substring(6)),
                    Integer.parseInt(SalesTable.getValueAt(i, 2).toString()),
                    Double.parseDouble(SalesTable.getValueAt(i, 4).toString().substring(6)),
                    Double.parseDouble(lblGrandTotal.getText())));
                    for (Item item:ItemList){
                        if (item.getItemID().equals(SalesTable.getValueAt(i, 0).toString())){
                            item.setQuantityInStock(item.getQuantityInStock()-Integer.parseInt(SalesTable.getValueAt(i, 2).toString()));
                        }
                    }
                }
               
                
                sm.salesfop.WriteFile("src/Data/Sales.txt", SalesList);
                sm.itmfop.WriteFile("src/Data/Item.txt",ItemList);
                JOptionPane.showMessageDialog(this,"Sales Added Successfully!","Sales Completed",JOptionPane.INFORMATION_MESSAGE);
                
                InitAddSalesPage();
                
            }
        }
        
    }//GEN-LAST:event_btnAddSaleActionPerformed

    private void txtPRIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPRIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPRIDActionPerformed

    private void txtReqTimestampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReqTimestampActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReqTimestampActionPerformed

    private void txtReqbyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReqbyNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReqbyNameActionPerformed

    private void txtReqbyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReqbyIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReqbyIDActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        // TODO add your handling code here:
        String ItemID = cmbPRItemID.getSelectedItem().toString();
        if (sm.CheckItemValid(ItemList,ItemID) == true){
            PRVisibility(true);
            
            int ItemIndex = sm.ReturnItemIndex(ItemList, ItemID);
            txtCurrentStock.setText(String.valueOf(ItemList.get(ItemIndex).getQuantityInStock()));
            txtReorderLevel.setText(String.valueOf(ItemList.get(ItemIndex).getReorderLevel()));
            if (Integer.parseInt(txtCurrentStock.getText()) < Integer.parseInt(txtReorderLevel.getText())){
                txtStockStatus.setText("Low");
            } else if (Integer.parseInt(txtCurrentStock.getText()) < Integer.parseInt(txtReorderLevel.getText())+10){
                txtStockStatus.setText("Below Normal");
            } else
            {
                txtStockStatus.setText("Normal");
            }
            
            AddPRTable(ItemList, sm.ReturnItemIndex(ItemList, ItemID), Integer.parseInt(spiQuantityPR.getValue().toString()));
        } else{
            JOptionPane.showMessageDialog(this,"Please select an item!","No Item Selected!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void cmbItemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbItemIDActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        ListSelectionModel cellSelectionModel = SalesTable.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        SelectedRow = SalesTable.getSelectedRow();
        
        if (SelectedRow != -1){
            cmbItemID.setEditable(false);
            txtItemID.setText(SalesTable.getValueAt(SelectedRow, 0).toString());
            spiQuantity.setValue(SalesTable.getValueAt(SelectedRow, 2));
            btnConfirmEdit.setVisible(true);
            btnCancelEdit.setVisible(true);
            txtItemID.setVisible(true);
            cmbItemID.setVisible(false);
            btnAddItem.setVisible(false);
            
        } else {
            JOptionPane.showMessageDialog(this,"Please select an item to edit!","No Item Selected!",JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllActionPerformed
        // TODO add your handling code here:
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to clear all?","Clear Page",JOptionPane.YES_NO_OPTION);
            if (confirmed == JOptionPane.YES_OPTION){
                InitAddSalesPage();
            }
    }//GEN-LAST:event_btnRemoveAllActionPerformed

    private void btnConfirmEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmEditActionPerformed
        // TODO add your handling code here:
        
        int AddItemQuantity = (Integer) spiQuantity.getValue();
        if (AddItemQuantity == 0){
            JOptionPane.showMessageDialog(this,"Quantity Cannot be 0!","Cannot Add Item!",JOptionPane.ERROR_MESSAGE);
        } else {
            int ItemIndex = sm.ReturnItemIndex(ItemList, SalesTable.getValueAt(SelectedRow, 0).toString());
            if (AddItemQuantity <= ItemList.get(ItemIndex).getQuantityInStock()){
                SalesTable.setValueAt(AddItemQuantity, SelectedRow, 2);
                SalesTable.setValueAt(rm.format(AddItemQuantity*Double.parseDouble(SalesTable.getValueAt(SelectedRow,3).toString().substring(6))),SelectedRow,4);
                CountMoney();
                btnConfirmEdit.setVisible(false);
                btnCancelEdit.setVisible(false);
                txtItemID.setVisible(false);
                cmbItemID.setVisible(true);
                btnAddItem.setVisible(true);
                spiQuantity.setValue(0);
            } else {
                JOptionPane.showMessageDialog(this,"Not Enough Stock for Item!","Low on Stock!",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnConfirmEditActionPerformed

    private void btnCancelEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelEditActionPerformed
        // TODO add your handling code here:
        btnConfirmEdit.setVisible(false);
        btnCancelEdit.setVisible(false);
        txtItemID.setVisible(false);
        cmbItemID.setVisible(true);
        btnAddItem.setVisible(true);
        spiQuantity.setValue(0);
    }//GEN-LAST:event_btnCancelEditActionPerformed

    private void txtItemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemIDActionPerformed

    private void spiQuantityPRStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spiQuantityPRStateChanged
        // TODO add your handling code here:
        if ( (Integer) spiQuantityPR.getValue() < 0){
            spiQuantityPR.setValue(0);
            JOptionPane.showMessageDialog(this,"No negative value accepted!","Negative value found!",JOptionPane.ERROR_MESSAGE);
        }
        String ItemID = cmbPRItemID.getSelectedItem().toString();
        AddPRTable(ItemList, sm.ReturnItemIndex(ItemList, ItemID), Integer.parseInt(spiQuantityPR.getValue().toString()));
        lblRequestQuantity.setText(spiQuantityPR.getValue().toString());
    }//GEN-LAST:event_spiQuantityPRStateChanged

    private void txtCurrentStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentStockActionPerformed

    private void txtReorderLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReorderLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReorderLevelActionPerformed

    private void txtStockStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStockStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStockStatusActionPerformed

    private void cmbPRItemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPRItemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPRItemIDActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int confirmed = JOptionPane.showConfirmDialog(null, "Confirm Submission?","Submission",JOptionPane.YES_NO_OPTION);
        if (confirmed == JOptionPane.YES_OPTION){
            if ((Integer) spiQuantityPR.getValue() != 0){
                Timestamp timestamp = new Timestamp(System.currentTimeMillis());
                PRList.add(new PurchaseRequisite(txtPRID.getText(),tmstmp.format(timestamp),
                txtReqbyID.getText(),cmbPRItemID.getSelectedItem().toString(),
                (Integer) spiQuantityPR.getValue(),
                "Pending","Pending","Pending"));
                sm.prfop.WriteFile("src/data/PurchaseRequisite.txt", PRList);
                JOptionPane.showMessageDialog(null, "Submission Completed!","Submitted",JOptionPane.INFORMATION_MESSAGE);
                InitPRPage();
            }            
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        InitPRViewPage();
        InitSalesReportPage();
        InitPOPage();
        clearItemView();
        clearInventoryView();
        
        LoadInventory();
        LoadItemView();
        LoadItmIDCMB(cmbitmid);
        LoadItmIDCMB(cmbVitmid);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void cmbPRIDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbPRIDPropertyChange
        // TODO add your handling code here:  
        
    }//GEN-LAST:event_cmbPRIDPropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) PRViewItemTable.getModel();
        try{dtm.removeRow(0);} catch(ArrayIndexOutOfBoundsException e){}
        ScrollPaneViewPR.getVerticalScrollBar().setValue(0);
        String PRID = cmbPRID.getSelectedItem().toString();
        for (PurchaseRequisite PR: PRList){
            if (PRID.equals(PR.getPR_ID())){
                pnlViewPR.setVisible(true);
                lblViewRequestDate.setText(PR.getRequest_TimeStamp());
                lblViewPRID.setText(PR.getPR_ID());
                for (User user: sm.getAllUsers()){
                    if (user.getUserID().equals(PR.getSM_ID())){
//                        System.out.println(user.userID);
//                        System.out.println(PR.getSM_ID());
                        lblViewRequestName.setText(user.getFirstName()+" "+user.getLastName());
                        break;
                    }
                }

                lblViewRequestStaffID.setText(PR.getSM_ID());
                lblViewRequestQuantity.setText(String.valueOf(PR.getQuantity()));
                
                lblViewApprovedStaffID.setText(PR.getPM_ID());
                for (User user: sm.getAllUsers()){
                    if (user.getUserID().equals(PR.getPM_ID())){
                        lblViewApprovedName.setText(user.getFirstName()+" "+user.getLastName());
                        break;
                    }
                }
                
                lblViewApprovedDate.setText(PR.getApp_Rej_TimeStamp());
                
                Object[] rowData = new Object[5];
                for (Item it:ItemList){
                    if (PR.getITM_ID().equals(it.getItemID())){
                        rowData[0] = it.getItemID();
                        rowData[1] = it.getItemName();
                        rowData[2] = it.getQuantityInStock();
                        rowData[3] = it.getReorderLevel();
                        rowData[4] = lblViewRequestQuantity.getText();
                        break;
                    }
                }
                dtm.addRow(rowData);
                break;
            }
        }   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
        // TODO add your handling code here:
        pnlPieChart.removeAll();
        pnlBarChart.removeAll();
        String month = cmbMonth.getSelectedItem().toString();
        String year  = cmbYear.getSelectedItem().toString();
        if (year.equals("Year...") || month.equals("Month...")){
            JOptionPane.showMessageDialog(null, "Please select month and year!", "Month and year not selected!", JOptionPane.ERROR_MESSAGE);
        } else{
            String Month = SetDateYear(month,year).substring(0,2);
            String Year = SetDateYear(month,year).substring(2);
            PieDataset dataset = CreatePieDatasetSalesByItem(Month,Year);
            JFreeChart SalesCountChart = ChartFactory.createPieChart3D(  
                "Sales by Item for"+" "+month+" "+year,  
                dataset,true,true,false);
            PiePlot plot = (PiePlot) SalesCountChart.getPlot();
            SalesCountChart.setBackgroundPaint(new java.awt.Color(242, 242, 242));
            plot.setBackgroundPaint(new java.awt.Color(255, 255, 255));
            SalesCountChart.getTitle().setFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.BOLD, 18));
            SalesCountChart.getLegend().setItemFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.PLAIN, 14));
            plot.setLabelFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.PLAIN, 12));
            
            ChartPanel panel = new ChartPanel(SalesCountChart);  
            panel.setPreferredSize(new java.awt.Dimension(580, 380));
            panel.setBackground(new java.awt.Color(242,242,242));
            panel.setVisible(true);
            sleep(200);
            pnlPieChart.add(panel);
            
            //BarChart for Sales per SM
            CategoryDataset barchartdataset = CreateBarDataset(Month,Year);
            JFreeChart SMSalesCountChart = ChartFactory.
                    createBarChart("Sales Manager Performance", 
                            "Sales Manager", "Transaction Count", barchartdataset);
            SMSalesCountChart.setBackgroundPaint(new java.awt.Color(242, 242, 242));
            SMSalesCountChart.getTitle().setFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.BOLD, 18));
            ChartPanel barpanel = new ChartPanel(SMSalesCountChart);
            CategoryPlot plot2 = SMSalesCountChart.getCategoryPlot();
            plot2.setBackgroundPaint(new java.awt.Color(255, 255, 255));
            plot2.getDomainAxis().setLabelFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.BOLD, 14)); 
            plot2.getDomainAxis().setTickLabelFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.PLAIN, 12));
            plot2.getRangeAxis().setLabelFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.BOLD, 14));
            plot2.getRangeAxis().setTickLabelFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.PLAIN, 12)); 
            BarRenderer renderer = (BarRenderer) plot2.getRenderer();
            renderer.setBarPainter(new StandardBarPainter());
            
            for (int i = 0; i < plot2.getDataset().getRowCount(); i++) {
                renderer.setSeriesPaint(i, new java.awt.Color(171, 136, 109));
            }
            
            barpanel.setPreferredSize(new java.awt.Dimension(580, 380));
            barpanel.setVisible(true);

            pnlBarChart.add(barpanel);
            double TotalRevenue = 0;
            int TotalItemSold = 0;
            HashSet<String> ReceiptNo = new HashSet<>();
            for (Sales sale: SalesList){
                if (sale.getReceipt_TimeStamp().substring(0,4).equals(Year) &&
                    sale.getReceipt_TimeStamp().substring(5,7).equals(Month)){
                    ReceiptNo.add(sale.getReceipt_No());
                    TotalItemSold = TotalItemSold + sale.getQuantity();
                }
            }
            int TotalNumberOfSales = ReceiptNo.size();
            for (String receiptno: ReceiptNo){
                for (Sales sale: SalesList){
                    if (receiptno.equals(sale.getReceipt_No())){
                        TotalRevenue = TotalRevenue + sale.getTotal();
                        break;
                    }
                }
            }
            
            lblNumberOfSales.setText(String.valueOf(TotalNumberOfSales));
            lblRevenue.setText(rm2.format(TotalRevenue));
            lblItemSold.setText(String.valueOf(TotalItemSold));
        }        
    }//GEN-LAST:event_btnDisplayActionPerformed

    private void ProfileChgPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfileChgPassActionPerformed
        sm.readLoginCredentials();
        sm.ResetPassword(ProfileCurrentPass.getText(),ProfileNewPass.getText(),ChgPassError, ProfileCurrentPass,ProfileNewPass,ShowHidePass);

    }//GEN-LAST:event_ProfileChgPassActionPerformed

    private void ShowHidePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowHidePassActionPerformed
        if(ShowHidePass.isSelected()){
            ProfileNewPass.setEchoChar((char)0);
        }else{
            ProfileNewPass.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_ShowHidePassActionPerformed

    private void cmbPOIDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbPOIDPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPOIDPropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ScrollPaneViewPO.getVerticalScrollBar().setValue(0);
        if (!cmbPOID.getSelectedItem().equals("Select...")){
            pnlViewPurchaseOrder.setVisible(true);
            
            PurchaseRequisite thisPR = sm.ReturnPRwPO(PRList, cmbPOID.getSelectedItem().toString());
            int PMIndex = sm.ReturnUserIndex(thisPR.getPo().getPM_ID());
            int FMIndex = sm.ReturnUserIndex(thisPR.getPo().getFM_ID());
            int SupIndex = sm.ReturnSupIndex(thisPR.getPo().getSupplier_ID(), SupList);
            int ItemIndex = sm.ReturnItemIndex(ItemList, thisPR.getITM_ID());
            
            
            
            lblViewPOID.setText(thisPR.getPo().getPO_ID());
            lblViewPODate.setText(thisPR.getPo().getPO_Creation_TimeStamp());
            lblViewPOName.setText(sm.getAllUsers().get(PMIndex).getFirstName()+" "+
                                  sm.getAllUsers().get(PMIndex).getLastName());
            lblViewPOStaffID.setText(sm.getAllUsers().get(PMIndex).getUserID());
            
            lblViewPOSupplier.setText(SupList.get(SupIndex).getSupplierName());
            lblViewPOSuppID.setText(SupList.get(SupIndex).getSupplierID());
            
            if (FMIndex != -1){
                lblViewPOApprovedName.setText(sm.getAllUsers().get(FMIndex).getFirstName()+" "+
                                          sm.getAllUsers().get(FMIndex).getLastName());
                lblViewPOApprovedStaffID.setText(sm.getAllUsers().get(FMIndex).getUserID());
                lblViewPOApprovedDate.setText(thisPR.getPo().getFM_Approval_TimeStamp());
            } else {
                lblViewPOApprovedName.setText("Pending");
                lblViewPOApprovedStaffID.setText("Pending");
                lblViewPOApprovedDate.setText("Pending");
            }
            
            
            lblViewDelStatus.setText(thisPR.getPo().getDeliveryStatus());
            lblViewDelDate.setText(thisPR.getPo().getDelivered_TimeStamp());
            Object[] RowData = new Object[5];
            RowData[0] = thisPR.getITM_ID();
            RowData[1] = ItemList.get(ItemIndex).getItemName();
            RowData[2] = String.valueOf(thisPR.getPo().getQuantity());
            RowData[3] = rm.format(sm.returnIUP(IUPList,ItemList.get(ItemIndex).getItemID(),SupList.get(SupIndex).getSupplierID()).getUnitCost());
            RowData[4] = rm.format(thisPR.getPo().getTotal());
            
            DefaultTableModel dtm = (DefaultTableModel) POViewTable.getModel();
            try {dtm.removeRow(0);} catch(ArrayIndexOutOfBoundsException e){}
            dtm.addRow(RowData);
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Purchase Order!", "Purchase Order not selected!", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmbPOIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPOIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPOIDActionPerformed

    private void tblinventoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblinventoryMouseClicked
        int i = tblinventory.getSelectedRow();
        System.out.println(tblinventory.getValueAt(i, 0));
        cmbitmid.setSelectedIndex(i+1);
        DisplayInventoryDetails(i);
        checkQiS(i);
    }//GEN-LAST:event_tblinventoryMouseClicked

    private void cmbitmidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbitmidActionPerformed
        int i = cmbitmid.getSelectedIndex();
        if(i == -1){}
        else if(i != 0)
        {
            i = i-1;
            DisplayInventoryDetails(i);
            checkQiS(i);
            LoadIUP(IUPList, (String)tblinventory.getValueAt(i,0), IUPTable);
            tblinventory.setRowSelectionInterval(i, i);
            tblinventory.scrollRectToVisible(new Rectangle(tblinventory.getCellRect(i, 0, true)));
        }
        else{clearInventoryView();}
    }//GEN-LAST:event_cmbitmidActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        clearInventoryView();
    }//GEN-LAST:event_btnclearActionPerformed

    private void cmbVitmidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVitmidActionPerformed
        int i = cmbVitmid.getSelectedIndex();
        if(i == -1){}
        else if(i != 0)
        {
            i = i-1;
            DisplayItemDetails(i);
            LoadIUP(IUPList, (String)tblVitm.getValueAt(i,0), IUPTableItem);
            tblVitm.setRowSelectionInterval(i, i);
            tblVitm.scrollRectToVisible(new Rectangle(tblVitm.getCellRect(i, 0, true)));
        }
        else{clearItemView();}
    }//GEN-LAST:event_cmbVitmidActionPerformed

    private void btnVclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVclearActionPerformed
        clearItemView();
    }//GEN-LAST:event_btnVclearActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here
        this.dispose();
        if(Admin == true){
            new Admin_Program(new Admin(sm));
        }else{
            new LoginUI();
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void jTabbedPane2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane2StateChanged
        // TODO add your handling code here:
        InitPRViewPage();
        InitSalesReportPage();
        InitPOPage();
        clearItemView();
        clearInventoryView();
        
        LoadInventory();
        LoadItemView();
        LoadItmIDCMB(cmbitmid);
        LoadItmIDCMB(cmbVitmid);
    }//GEN-LAST:event_jTabbedPane2StateChanged

    private void DisplayInventoryDetails(Integer i)
    {
        txtfielditmid.setText((String)tblinventory.getValueAt(i, 0));
        txtfieldname.setText((String)tblinventory.getValueAt(i, 1));
        txtfielddesc.setText((String)tblinventory.getValueAt(i, 2));
        txtfieldQiS.setText(String.valueOf(tblinventory.getValueAt(i, 3)));
        txtfieldRL.setText(String.valueOf(tblinventory.getValueAt(i, 4)));
    }
    
    private void checkQiS(Integer i)
    {
        int QiS = (Integer)tblinventory.getValueAt(i,3);
        int RL = (Integer)tblinventory.getValueAt(i,4);
        if(QiS<RL)
        {
            lblitmstatus.setForeground(new java.awt.Color(239,33,33));
            lblstatusstar.setForeground(new java.awt.Color(239,33,33));
            txtfieldQiS.setForeground(new java.awt.Color(239,33,33));
        }
        else
        {
            lblitmstatus.setForeground(new java.awt.Color(228,224,225));
            lblstatusstar.setForeground(new java.awt.Color(228,224,225));
            txtfieldQiS.setForeground(Color.BLACK);
        }
    }
    
        private void clearItemView()
    {
        txtfieldVitmid.setText("");
        txtfieldVitmname.setText("");
        txtfieldVdesc.setText("");
        txtfieldVRP.setText("");
        tblVitm.clearSelection();
        tblscrollpanelitem.getVerticalScrollBar().setValue(0);
        if(cmbVitmid.getSelectedIndex() != -1){cmbVitmid.setSelectedIndex(0);}
        if(IUPTableItem != null){IUPTableItem.setRowCount(0);}
    }
        
    private void clearInventoryView()
    {
        txtfielditmid.setText("");
        txtfieldname.setText("");
        txtfielddesc.setText("");
        txtfieldQiS.setText("");
        txtfieldRL.setText("");
        tblinventory.clearSelection();
        tblscrollpanel.getVerticalScrollBar().setValue(0);
        lblitmstatus.setForeground(new java.awt.Color(228,224,225));
        lblstatusstar.setForeground(new java.awt.Color(228,224,225));
        if(cmbitmid.getSelectedIndex() != -1){cmbitmid.setSelectedIndex(0);}
        if(IUPTable != null){IUPTable.setRowCount(0);}
    }   
    
    private void LoadItemView()
    {
        if (ItemTable != null){
        ItemTable.setRowCount(0);
        for(Item i: ItemList)
        {
            if(i.getQuantityInStock()>=0)
            {
                Object row[] = {i.getItemID(), i.getItemName(), i.getDescription(),i.getRetailPrice()};
                ItemTable.addRow(row);
            }    
        }}
    }
    
   
    
    private void SetNameID(){
        lblSM_ID.setText(sm.getUserID());
        lblSM_Name.setText("Welcome, "+sm.getFirstName()+" "+sm.getLastName()+"!");      
    }
    
    private void FindNoOfItemQuantity(){
        int Quantity = 0;
        for (int i = 0; i < SalesTable.getRowCount();i++){
             Quantity = Integer.parseInt(SalesTable.getValueAt(i, 2)+"") + Quantity;
        }
        String QuantityStr = Integer.toString(Quantity);
        String NoItemsStr = Integer.toString(SalesTable.getRowCount());
        txtNoQuantity.setText(QuantityStr);
        txtNoItems.setText(NoItemsStr);   
    }
    
    private void CountMoney(){
        double Subtotal = 0;
        double GST = 0;
        double GrandTotal = 0;
        double DueBalance = 0;
        
        for (int i = 0; i < SalesTable.getRowCount(); i++){
            Subtotal = Subtotal + Double.parseDouble(String.valueOf(SalesTable.getValueAt(i,4)).substring(6));
        }
        GST = Subtotal * 6/106;
        Subtotal = Subtotal - GST;
        GrandTotal = Subtotal + GST;
        DueBalance = 0;
        
        lblSubtotal.setText(df.format(Subtotal));
        lblGST.setText(df.format(GST));
        lblGrandTotal.setText(df.format(GrandTotal));
    }
    
    private void WriteItemComboBox(JComboBox<String> cBox){
        cBox.removeAllItems();
        cBox.addItem("Select...");
        for (Item Item : ItemList) {
            if (Item.getQuantityInStock() != -1){
                cBox.addItem(Item.getItemID());
            }
        }
    }
    
    private void WriteItemComboBoxPR(JComboBox<String> cBox){
        cBox.removeAllItems();
        cBox.addItem("Select...");
        HashSet<String> PRItem = new HashSet<>();
        for (PurchaseRequisite prr: PRList){
            if (prr.getStatus().equals("Pending")){
                PRItem.add(prr.getITM_ID());}
        }
        for (Item itmm: ItemList){
            if (!PRItem.contains(itmm.getItemID()) 
                    && itmm.getQuantityInStock() <= itmm.getReorderLevel()
                    && itmm.getQuantityInStock() != -1){
                cBox.addItem(itmm.getItemID());
            }
        }
    }
    
    
    private void InitAddSalesPage (){
        DefaultTableModel dtm = (DefaultTableModel) SalesTable.getModel();
        dtm.setRowCount(0);
        txtReceiptNo.setText(sm.AssignReceiptNumber(SalesList));
        txtSM_ID.setText(sm.getUserID());
        txtSM_Name.setText(sm.getFirstName()+" "+sm.getLastName());
        txtNoQuantity.setText("0");
        txtNoItems.setText("0");
        CountMoney();
        
        btnConfirmEdit.setVisible(false);
        btnCancelEdit.setVisible(false);
        txtItemID.setVisible(false);
        WriteItemComboBox(cmbItemID);
        
    }
    
    private void InitPRPage(){
        Timestamp timestamp = new Timestamp(System.currentTimeMillis());
        PRScrollPane.getVerticalScrollBar().setValue(0);
        txtReqTimestamp.setText(date.format(timestamp));
        txtPRID.setText(sm.AssignPR_ID(PRList));
        txtReqbyName.setText(sm.getFirstName()+" "+sm.getLastName());
        txtReqbyID.setText(sm.getUserID());
        lblPRID.setText(sm.AssignPR_ID(PRList));
        lblRequestDate.setText(date.format(timestamp));
        lblRequestName.setText(sm.getFirstName()+" "+sm.getLastName());
        lblRequestStaffID.setText(sm.getUserID());
        
        
        lblApprovedName.setText("Pending...");
        lblApprovedStaffID.setText("Pending...");
        lblApprovedDate.setText("Pending...");
        
        lblRequestQuantity.setText("0");
        
        cmbPRItemID.removeAllItems();
        cmbPRItemID.addItem("Select...");
        WriteItemComboBoxPR(cmbPRItemID);
        
        DefaultTableModel dtm = (DefaultTableModel) PRItemTable.getModel();
        try{
            dtm.removeRow(0);
        } catch (ArrayIndexOutOfBoundsException e){}
        
        PRVisibility(false);
        
        
    }
    
    public void PRVisibility (boolean torf){
        lblCurrentStock.setVisible(torf);
        lblReorderLevel.setVisible(torf);
        lblStockStatus.setVisible(torf);
        txtCurrentStock.setVisible(torf);
        txtReorderLevel.setVisible(torf);
        txtStockStatus.setVisible(torf);
        lblQuantityNeeded.setVisible(torf);
        spiQuantityPR.setVisible(torf);
        btnSubmit.setVisible(torf);
    }
    
    public void AddPRTable (ArrayList <Item> ItemList , int ItemIndex,int SelectQuantity){
        Object[] rowData = {ItemList.get(ItemIndex).getItemID(),ItemList.get(ItemIndex).getItemName(),
                    ItemList.get(ItemIndex).getQuantityInStock(),ItemList.get(ItemIndex).getReorderLevel(),
                    SelectQuantity};
        DefaultTableModel dtm = (DefaultTableModel) PRItemTable.getModel();
        try{
        dtm.removeRow(0);} 
        catch(ArrayIndexOutOfBoundsException e){
            
        }
        dtm.addRow(rowData);
    }
    
    public void InitPRViewPage(){
        pnlViewPR.setVisible(false);
        ScrollPaneViewPR.getVerticalScrollBar().setValue(0);
        
        cmbPRID.removeAllItems();
        cmbPRID.addItem("Select...");
        for (PurchaseRequisite PR: PRList){
            if (!PR.getStatus().equals("Approved")){
                Item i = (Item)new Item().ReturnSpecificObject(ItemList, PR.getITM_ID());
                if(i.getQuantityInStock()!= -1)
                {
                    cmbPRID.addItem(PR.getPR_ID());
                }
            }
        }
    }
    
    public PieDataset CreatePieDatasetSalesByItem(String month,String year){
        DefaultPieDataset dataset = new DefaultPieDataset();      
        String ItemID[] = new String[ItemList.size()];
        int SalesCount[] = new int[ItemList.size()];
        
        for (int i = 0; i < ItemList.size(); i++){
            ItemID[i] = ItemList.get(i).getItemID();
            for (int j = 0; j < SalesList.size(); j++){
                if (SalesList.get(j).getReceipt_TimeStamp().substring(0,4).equals(year) &&
                    SalesList.get(j).getReceipt_TimeStamp().substring(5,7).equals(month) &&
                    SalesList.get(j).getITM_ID().equals(ItemID[i])){
                    SalesCount[i] = SalesCount[i] + SalesList.get(j).getQuantity();
                }
            }
        }
        
        for (int i = 0; i < ItemList.size(); i++){
            if (SalesCount[i] > 0){
                dataset.setValue(ItemID[i],SalesCount[i]);
            }
        }
        return dataset;
    }
    
    public CategoryDataset CreateBarDataset(String month, String year){
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        ArrayList<String> SalesManagerID = new ArrayList<>();
        
        for (Sales sale:SalesList){
            if (sale.getReceipt_TimeStamp().substring(0,4).equals(year) &&
                sale.getReceipt_TimeStamp().substring(5,7).equals(month)){
                SalesManagerID.add(sale.getSM_ID());
            }
        }
        Set<String> st = new HashSet<>(SalesManagerID);
        for (String set: st){
            dataset.addValue(Collections.frequency(SalesManagerID, set), "Sales", set);
        }
        
        return dataset;
        
        
    }
    
        private void DisplayItemDetails(Integer i)
    {
        txtfieldVitmid.setText((String)tblVitm.getValueAt(i, 0));
        txtfieldVitmname.setText((String)tblVitm.getValueAt(i, 1));
        txtfieldVdesc.setText((String)tblVitm.getValueAt(i, 2));
        txtfieldVRP.setText(String.valueOf(tblVitm.getValueAt(i, 3)));
    }
    
    public String SetDateYear(String month, String year){
        switch (month) {
            case "January" -> { return "01" + year; }
            case "February" -> { return "02" + year; }
            case "March" -> { return "03" + year; }
            case "April" -> { return "04" + year; }
            case "May" -> { return "05" + year; }
            case "June" -> { return "06" + year; }
            case "July" -> { return "07" + year; }
            case "August" -> { return "08" + year; }
            case "September" -> { return "09" + year; }
            case "October" -> { return "10" + year; }
            case "November" -> { return "11" + year; }
            case "December" -> { return "12" + year; }
            default -> { return "Invalid month"; }
        }
    }
    
    public void sleep(int millisecond){
        try {
            Thread.sleep(millisecond);
          } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
          }
    }
    
    public void InitSalesReportPage(){
        cmbYear.removeAllItems();
        HashSet<String> year = new HashSet<>();
        HashSet<Integer> month = new HashSet<>();
        cmbYear.addItem("Year...");
        for (Sales sale: SalesList){
            year.add(sale.getReceipt_TimeStamp().substring(0,4));
            month.add(Integer.valueOf(sale.getReceipt_TimeStamp().substring(5,7)));
        }
        for (String yrs: year){
            cmbYear.addItem(yrs);
        }
        
        cmbMonth.removeAllItems();
        
        ArrayList monthsort = new ArrayList(month);
        Collections.sort(monthsort);
        
        String[] months = {"Month...","January","February","March","April","May","June","July","August","September","October","November","December"};
        cmbMonth.addItem(months[0]);
        for (Object m : monthsort){
            cmbMonth.addItem(months[Integer.parseInt(m.toString())]);
        }
        
        lblNumberOfSales.setText("");
        lblRevenue.setText("");
        lblItemSold.setText("");
        
        pnlPieChart.removeAll();
        pnlBarChart.removeAll();
        
    }
    
    public void InitPOPage(){
       cmbPOID.removeAllItems();
       cmbPOID.addItem("Select...");
       POViewTable.removeAll();
       pnlViewPurchaseOrder.setVisible(false);
       
       for (PurchaseRequisite p: PRList){
           if (!p.getPo().getStatus().equals("Rejected")){
               Item i = (Item)new Item().ReturnSpecificObject(ItemList, p.getITM_ID());
               if(i.getQuantityInStock()!= -1)
               {
                    cmbPOID.addItem(p.getPo().getPO_ID());
               }
           }
       }

    }
    
    private void LoadIUP(ArrayList<ItemUnitPrice> IUPList,String ItemID, DefaultTableModel IUPTable)
    {
        IUPTable.setRowCount(0);

        for(ItemUnitPrice i: IUPList)
        {
            if(i.getItemID().equals(ItemID))
            {
                Object row[] = {i.getSupplierID(),i.getUnitCost()};
                IUPTable.addRow(row);
            }
        }
        if(IUPTable.getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(null, "Please find supplier for this item ASAP!", "No Suppliers Found!", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void LoadInventory()
    {
        if (InventoryTable != null){
            InventoryTable.setRowCount(0);
        for(Item i:ItemList)
        {
            if(i.getQuantityInStock()>=0)
            {
                Object row[] = {i.getItemID(), i.getItemName(), i.getDescription(), 
                                i.getQuantityInStock(), i.getReorderLevel()};
                InventoryTable.addRow(row);
            }
        }}
    }
    
    private void LoadItmIDCMB(javax.swing.JComboBox<String> cmbitmid)
    {
        cmbitmid.removeAllItems();
        cmbitmid.addItem("Select...");
        for(Item i: ItemList)
        {
            if(i.getQuantityInStock()>=0)
            {
                cmbitmid.addItem(i.getItemID());
            }
        }
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChgPassError;
    private javax.swing.JComboBox<String> ItemComboBox;
    private javax.swing.JTable POViewTable;
    private javax.swing.JTable PRItemTable;
    private javax.swing.JScrollPane PRScrollPane;
    private javax.swing.JTable PRViewItemTable;
    private javax.swing.JPanel PnlSMDashboard;
    private javax.swing.JButton ProfileChgPass;
    private javax.swing.JLabel ProfileContact;
    private javax.swing.JPasswordField ProfileCurrentPass;
    private javax.swing.JLabel ProfileEmail;
    private javax.swing.JLabel ProfileFN;
    private javax.swing.JLabel ProfileGender;
    private javax.swing.JLabel ProfileID;
    private javax.swing.JLabel ProfileLN;
    private javax.swing.JPasswordField ProfileNewPass;
    private javax.swing.JLabel ProfileUserType;
    private javax.swing.JTable SalesTable;
    private javax.swing.JScrollPane ScrollPaneViewPO;
    private javax.swing.JScrollPane ScrollPaneViewPR;
    private javax.swing.JToggleButton ShowHidePass;
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnAddSale;
    private javax.swing.JButton btnCancelEdit;
    private javax.swing.JButton btnConfirmEdit;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRemoveAll;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnVclear;
    private javax.swing.JButton btnclear;
    private javax.swing.JComboBox<String> cmbItemID;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JComboBox<String> cmbPOID;
    private javax.swing.JComboBox<String> cmbPRID;
    private javax.swing.JComboBox<String> cmbPRItemID;
    private javax.swing.JComboBox<String> cmbVitmid;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JComboBox<String> cmbitmid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblApprovedDate;
    private javax.swing.JLabel lblApprovedName;
    private javax.swing.JLabel lblApprovedStaffID;
    private javax.swing.JLabel lblCurrentStock;
    private javax.swing.JLabel lblGST;
    private javax.swing.JLabel lblGrandTotal;
    private javax.swing.JLabel lblItemSold;
    private javax.swing.JLabel lblNexusLogo;
    private javax.swing.JLabel lblNumberOfSales;
    private javax.swing.JLabel lblPRID;
    private javax.swing.JLabel lblQuantityNeeded;
    private javax.swing.JLabel lblReorderLevel;
    private javax.swing.JLabel lblRequestDate;
    private javax.swing.JLabel lblRequestName;
    private javax.swing.JLabel lblRequestQuantity;
    private javax.swing.JLabel lblRequestStaffID;
    private javax.swing.JLabel lblRevenue;
    private javax.swing.JLabel lblSM_ID;
    private javax.swing.JLabel lblSM_Name;
    private javax.swing.JLabel lblStockStatus;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JLabel lblViewApprovedDate;
    private javax.swing.JLabel lblViewApprovedName;
    private javax.swing.JLabel lblViewApprovedStaffID;
    private javax.swing.JLabel lblViewDelDate;
    private javax.swing.JLabel lblViewDelStatus;
    private javax.swing.JLabel lblViewPOApprovedDate;
    private javax.swing.JLabel lblViewPOApprovedName;
    private javax.swing.JLabel lblViewPOApprovedStaffID;
    private javax.swing.JLabel lblViewPODate;
    private javax.swing.JLabel lblViewPOID;
    private javax.swing.JLabel lblViewPOName;
    private javax.swing.JLabel lblViewPOStaffID;
    private javax.swing.JLabel lblViewPOSuppID;
    private javax.swing.JLabel lblViewPOSupplier;
    private javax.swing.JLabel lblViewPRID;
    private javax.swing.JLabel lblViewRequestDate;
    private javax.swing.JLabel lblViewRequestName;
    private javax.swing.JLabel lblViewRequestQuantity;
    private javax.swing.JLabel lblViewRequestStaffID;
    private javax.swing.JLabel lblitmstatus;
    private javax.swing.JLabel lblitmstatus1NoUse;
    private javax.swing.JLabel lblstatusstar;
    private javax.swing.JPanel pnlBarChart;
    private javax.swing.JPanel pnlCreatePR;
    private javax.swing.JPanel pnlPieChart;
    private javax.swing.JPanel pnlPrices;
    private javax.swing.JPanel pnlSalesEntry;
    private javax.swing.JPanel pnlSalesReport;
    private javax.swing.JPanel pnlStockLevel;
    private javax.swing.JPanel pnlTopPanel;
    private javax.swing.JPanel pnlVI;
    private javax.swing.JPanel pnlViewItems;
    private javax.swing.JPanel pnlViewPO;
    private javax.swing.JPanel pnlViewPR;
    private javax.swing.JPanel pnlViewPurchaseOrder;
    private javax.swing.JPanel pnlVitm;
    private javax.swing.JPanel pnladddetails;
    private javax.swing.JSpinner spiQuantity;
    private javax.swing.JSpinner spiQuantityPR;
    private javax.swing.JTable tblVitm;
    private javax.swing.JTable tblinventory;
    private javax.swing.JTable tblitmiup;
    private javax.swing.JTable tbliup;
    private javax.swing.JScrollPane tblscrollpanel;
    private javax.swing.JScrollPane tblscrollpanelitem;
    private javax.swing.JTextField txtCurrentStock;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtNoItems;
    private javax.swing.JTextField txtNoQuantity;
    private javax.swing.JTextField txtPRID;
    private javax.swing.JTextField txtReceiptNo;
    private javax.swing.JTextField txtReorderLevel;
    private javax.swing.JTextField txtReqTimestamp;
    private javax.swing.JTextField txtReqbyID;
    private javax.swing.JTextField txtReqbyName;
    private javax.swing.JTextField txtSM_ID;
    private javax.swing.JTextField txtSM_Name;
    private javax.swing.JTextField txtStockStatus;
    private javax.swing.JTextField txtfieldQiS;
    private javax.swing.JTextField txtfieldRL;
    private javax.swing.JTextField txtfieldVRP;
    private javax.swing.JTextField txtfieldVdesc;
    private javax.swing.JTextField txtfieldVitmid;
    private javax.swing.JTextField txtfieldVitmname;
    private javax.swing.JTextField txtfielddesc;
    private javax.swing.JTextField txtfielditmid;
    private javax.swing.JTextField txtfieldname;
    // End of variables declaration//GEN-END:variables


}

